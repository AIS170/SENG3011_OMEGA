name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest coverage boto3 requests junit2html
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: 🔐 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.RAKSHIL_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.RAKSHIL_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Start server
      run: python3 app.py &

    - name: Wait for server to start
      run: sleep 10

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests with coverage (retrievalService + DataCollection)
      run: |
        coverage run --source . --omit=app.py -m pytest \
          retrievalService/testing \
          dataCollection/Testing/unitTests.py \
          dataCollection/Testing/ComponentTesting.py
        coverage report -m --fail-under=85
        coverage xml -o coverage.xml
        coverage html -d coverage_html_report
        pytest --junitxml=test-results.xml

    - name: Run contract (integration) tests (DataCollection)
      run: |
        python3 dataCollection/src/dataCol.py &
        sleep 5
        pytest dataCollection/Testing/ContractTesting.py -m integration --disable-warnings

    - name: Install tools for PDF generation
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc wkhtmltopdf

    - name: Generate Test Report PDF
      run: |
        junit2html test-results.xml test-report.html
        wkhtmltopdf test-report.html test-report.pdf

    - name: Generate PDF coverage summary
      run: |
        echo "# Coverage Report" > coverage-summary.md
        echo "" >> coverage-summary.md
        echo '```' >> coverage-summary.md
        coverage report -m >> coverage-summary.md
        echo '```' >> coverage-summary.md
        pandoc coverage-summary.md -o coverage-summary.pdf --pdf-engine=wkhtmltopdf

    - name: Upload Test Summary PDF
      uses: actions/upload-artifact@v4
      with:
        name: junit-test-report
        path: test-report.pdf

    - name: Upload Coverage Summary PDF
      uses: actions/upload-artifact@v4
      with:
        name: coverage-summary-pdf
        path: coverage-summary.pdf

    - name: Upload Coverage HTML Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-html
        path: coverage_html_report/
