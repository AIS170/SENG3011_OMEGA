name: Run All Tests with Report

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: 🧾 Checkout code
      uses: actions/checkout@v3

    - name: 🐍 Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest coverage requests boto3 junit2html
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: 🔐 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.RAKSHIL_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.RAKSHIL_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: ✅ Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: 🚦 Run unit & component tests with coverage
      run: |
        coverage run --source dataCollection --omit=src/app.py -m pytest dataCollection/Testing/unitTests.py dataCollection/Testing/ComponentTesting.py --junitxml=test-results.xml
        coverage report -m
        coverage xml -o coverage.xml
        coverage html -d coverage_html_report

    - name: 🧪 Run contract (integration) tests
      run: |
        python3 dataCollection/src/dataCol.py &  # Start Flask app in background
        sleep 5
        pytest dataCollection/Testing/ContractTesting.py -m integration --disable-warnings

    - name: Upload Test Results XML
      uses: actions/upload-artifact@v4
      with:
        name: pytest-report
        path: test-results.xml

    - name: Upload Coverage XML
      uses: actions/upload-artifact@v4
      with:
        name: coverage-file-xml
        path: coverage.xml

    - name: Upload Coverage HTML
      uses: actions/upload-artifact@v4
      with:
        name: coverage-file-html
        path: coverage_html_report/

    - name: 📊 Generate Coverage Summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage.xml
        badge: true
        fail_below_min: false
        format: markdown
        hide_complexity: true
        indicators: true
        output: both

    - name: 🖨️ Generate Test Report PDF
      run: |
        junit2html test-results.xml test-report.html
        sudo apt-get update
        sudo apt-get install -y wkhtmltopdf pandoc
        wkhtmltopdf test-report.html test-report.pdf

    - name: 🧾 Generate PDF Coverage Summary
      run: |
        echo "# Coverage Report" > coverage-summary.md
        echo "" >> coverage-summary.md
        echo '```' >> coverage-summary.md
        coverage report -m >> coverage-summary.md
        echo '```' >> coverage-summary.md
        pandoc coverage-summary.md -o coverage-summary.pdf --pdf-engine=wkhtmltopdf

    - name: Upload Test Summary PDF
      uses: actions/upload-artifact@v4
      with:
        name: junit-test-report
        path: test-report.pdf

    - name: Upload Coverage Summary PDF
      uses: actions/upload-artifact@v4
      with:
        name: coverage-summary-pdf
        path: coverage-summary.pdf
